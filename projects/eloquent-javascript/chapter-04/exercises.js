////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// Create an array function that includes all the numbers in a range
// i: at least two parameters: start (#), end (#)
// i: optional third parameter if increment value (#) dif than default (=1)
// o: an array representing a range of # from start to end, inclusive
// c: do not correct incr if it non-sensical for the context; instead return []
// c: if start = end, return [];
// e: ensure it works if start is greater or less than end

function range(start, end, incr = 1) {
  var numRange = [];
  if(start === end || (start < end && incr < 0) || (start > end && incr < 0)) {
    numRange = numRange;
  } else if(start < end) { 
    for(let i = start; i <= end; i = i + incr) {
        numRange.push(i);
    } 
  } else if (start > end) {
      for(let i = start; i >= end; i = i + incr) {
        numRange.push(i);
      }
    }
    
  return numRange;
}


////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// Declare a function to sum an array of numbers
// i: one parameter, an array
// o: a number, the sum value of all elements

function sum(array) {
  
  //starting sum is zero
  let sum = 0;
  
  //forward loop through array by index
  for(let i = 0; i <= array.length - 1; i++) {
    
    //add the value at each index to sum
    sum += array[i];
  }
  return sum;
}

////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArray(array) {
  let newArray = [];
  for(let i = array.length - 1; i >= 0; i--) {
    newArray.push(array[i]);
  }
  return newArray;
}

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// Create function that will reverse the elements in an array
// i: one parameter, an array
// o: same array, but in reverse
// c: do not create a new array, but you can store a character in a local variable
// e: EJS suggests rounding array.length / 2, but I don't think it's necessary
function reverseArrayInPlace(array) {
  
  // forward loop through the front half of the array
  for(let i = 0; i < (array.length / 2); i++) {
    
    //save the current element in a local variable
    let index = array[i];
    
    //replace the current element with it's counterpart from the rear;
    array[i] = array[array.length - 1 - i];
    
    //replace the rear element with the forward element stored in index
    array[array.length - 1 - i] = index;
  }
  return array;
}

//I really want to figure out how to build array.unshift(array.pop(), array.pop()...)

////////////////////////////////////////////////////////////////////////////////
// arrayToList /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function arrayToList(array) {
    let list = {
    value: array[0],
    rest: {
      value: array[1],
      rest: {
        value: array[2],
        rest: null
        }
      }
    };
    for(let i = 3; i <= array.length - 1; i++)
  return list;
}

////////////////////////////////////////////////////////////////////////////////
// listToArray /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function listToArray() {

}

////////////////////////////////////////////////////////////////////////////////
// prepend /////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function prepend() {

}

////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function nth() {

}

////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function deepEqual() {

}

////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};
